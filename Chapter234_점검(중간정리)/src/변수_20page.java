/*
 * 	변수: 한개의 데이터를 메모리에 저장하는 공간
 * 	---
 * 	 기본형(자바에서 지원하는 메모리 크기)=> 1byte,2byte,4byte,8byte
 * 	  메모리 크기(컴퓨터는 무조건 0,1만 저장 가능)=>0이나 1 저장하는 공간=bit
 * 	  ==> bit=>bit(8) byte (k, M)
 * 	  정수
 * 		byte=> 1byte 크기의 메모리를만들어 저장 가능하게 만들어 줌
 * 				------------------------------
 * 				0	1	1	1	1	1	1	1
 * 				--
 * 				부호비트(0=>양수,1=>음수)
 * 				------------------------------
 * 									2^2*1,2^1*1,2^0*1
 * 									------------------> 총 -128~127
 * 				네트워크(웹) => 파일업/다운로드, 채팅 문자열
 * 		int => 4byte: 일반적으로 정수표현(default=>컴퓨터에서 정수가 입력되면 int로 인식) 
 * 		long => 8byte: 금융권...(빅데이터)
 * 	  실수
 * 		double => 8byte:소수점 15자리
 * 	  문자
 * 		char => 2byte(음수 없음=>0~65535)==> 1byte(=싱글바이트메모리,ASC),2byte(=멀티바이트메모리,유니코드)
 * 				한글(한글자당 2byte)
 * 				==>String:문자열
 * 	  논리
 * 	 **참조형(프로그래머가 직접 메모리 크기 제작) => 기본형 여래개를 묶어서
 * 	  1) 배열: 같은 데이터만 묶어서 관리 ->5장
 * 	  2) 클래스: 다른 데이터 여러개를 묶어서 관리(***) -> 6장 
 * 	 
 * 	 *** 저장된 값
 * 	 *** 데이터형
 * 	 *** 변경되는 값이 있는가?
 * 
 * 	 변수 설정
 * 	 ------
 *   데이터형 변수명;
 *   ----->
 *   기본형
 *    int (변수명)
 *   -----------> 참조(메모리 주소를 가지고 제어)
 *   배열
 *    int[] (배열명)
 *   클래스 
 * 	  Student 객체
 * 	 ------------> 주소만 가지고 있음
 * 
 * 	 식별자: 변수,상수,클래스명,배열명,인터페이스,메소드 
 * 	 -----------------------------------적용 가능
 * 	  1) 알파벳, 한글로 시작(권장:알파벳 시작-> 운영체제마다 한글 표현이 다름) => AWS에서 깨짐(운영체제 Linux)
 * 	  	 => 알파벳: 대소문자 구분
 * 	  2) 숫자 사용 가능(앞에 사용X)
 * 	  3) 특수문자 사용 가능(_,$)
 * 	  4) 키워드 사용 금지(자바에서 지원하는 단어)
 * 		예) if, for, while, do, int, double 
 * 	  5) 변수의 길이는 제한하지 않음(3~7)
 * 		 -------> 클래스명: 대소문자 시작. 예) String, System..
 * 				  변수, 메소드: 소문자 시작
 * 				  상수: 전체 대문자 => 권장 ==> 분석 쉽게 만듦 ==> 리팩토링(SM)
 * 	  => 변수 선언, 상수 선언
 * 		데이터형 변수명 ----------------> 선언-> 초기화, 선언과 동시에 초기값 지정(변경 가능)
 * 		final 데이터형 변수명 ----------> 선언과 동시에 초기화(변경 불가)
 * 
 * 	 ***변수 선언(국어, 수학, 영어)
 * 		int kor;
 * 		int math;
 * 		int eng;
 * 		
 * 		int kor,math,eng;
 * 		---------> 사용 불가(초기값 주지X)
 * 		변수 선언 후에는 반드시 초기화
 * 		int kor;
 * 		kor=100;
 * 	
 * 		int kor=100;
 * 		-----------
 * 		여러개
 * 		int kor=0,eng=0,math=0
 * 	 ***초기화 방법
 * 		명시적 초기화: int a=100;
 * 		입력값: int a=scan.nextInt();
 * 		난수: int a=(int)(Math.random());
 * 	 ***변수의 표현법
 * 	 	double,float 비교 => F(f)
 * 		int,long 비교 => L(l)
 * 		정수표현법
 * 		 10진법: 100
 * 		 8진법: 012
 * 	 	 16진법: 0xff(color) 0xFFF,0x0000
 * 	 ------------------------------------------------
 *	변수
 *	 지역변수
 *		=지역변수 ***
 *		=매개변수: 메소드 ==> isLogin(String id,String pwd) => true/false
 *	 멤버변수(클래스{})
 *		=객체변수
 *		=공유변수 	
 *	--------------------------------------------------------------
 *	 문자열 결합
 *	 -------
 *	  7+""+7 -> "77"(문자열이 연산되면 무조건 문자열)
 *	  7+7+""+7 -> "147"
 *	  7+""+7+7 ->"777"
 *	  7+""+7*2 ->"714"
 *
 *	 자동 형변환
 *		=> 초기값 대입
 *			long l=10; ==> 10L
 *					--자동으로 long
 *			int a='A'; ==> 65
 *				  --- int
 *			int a=10.5; ==> 저장 불가 ==> 오류
 *			---크거나 같아야 함
 *
 *			강제형변환
 *			int a=(int)10.5; ==> a=10
 *			형변환X: boolean
 *		=> 연산처리(연산-> 항상 같은 데이터형만 연산 가능) ==> 큰 데이터형으로 변환
 *						  ---------
 *			10+10.5
 *			-->10.0 ==> 10.0+10.5 = 20.0
 *			'A'+1
 *			--->65 ==> 65+1 = 66
 *			(int)(Math.random()*100)
 *
 *			형변환:(int)"10" -> 문자열은 형변환 불가 (변경=> 라이브러리):Wrapper클래스 
 *				웹, 윈도우 ==> 모든 입력값,출력값 => String(문자열)
 *			*** 프로그램에 맞게 데이터형을 변경해서 사용할 수 있음(기본형, 클래스형)
 *			82~83page ==> 자동형변환
 *			*** int 이하 데이터형(byte,short,char) ==> 연산처리가 되면 int
 *			 byte+byte=int, char+char=int, byte+char=int
 *
 *			데이터 저장 ==> 사용자 요청 처리  
 *			-------  	-----------
 *						연산자 => 
 *		사용자:id,pwd		id.equals("admin")&&pwd.dquals("1234")
 *		사용자:kor,eng,math	총점,평균=>+,/
 *		-----------------메모리(ram)
 *		영구적 저장: 파일,오라클
 *			
 * 		
 * 	
 * 
 */
public class 변수_20page {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		float f=10.5F;
		System.out.println("f="+f);
		
		System.out.println("\"홍길동\""); //"홍길동"
		System.out.println("c:\\javaDev\\eclipse");// \n, \t
		

	}

}
