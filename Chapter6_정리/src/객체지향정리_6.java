/*
 * 	*** class: 한개, 한 사람에 대한 설계
 * 		=> new 이용해서 여러개 저장 후 사용
 * 
 * 	1. 변수
 * 		인스턴스, static 구분
 * 			   -------- 메뉴, 로고, 사이트명
 * 	2. 메소드
 * 		리턴형 / 매개변수
 * 		----	----- 사용자 전송, 상세보기(번호: 영화, 게시물) 	C/S => 클라이언트(유저: 요청 => 매개변수)
 * 													서버 => 결과값(리턴형)
 * 	   화면출력(배열,클래스)
 * 			 --	 ----
 * 			목록출력   상세보기 
 * 		기본형 => 로그인 여부, 개수, 총 페이지 
 * 		
 * 		메소드
 * 		----
 * 		 오버로딩 / 오버라이딩(기존에 있는 메소드를 변경) => 단점:상속 있어야 함
 * 		 -----> 한개의 메소드명으로 여러개의 기능을 만들어서 처리 => 한개의 클래스(생성자)
 * 
 * 		메소드 형식
 * 			[접근지정어][옵션] 리턴형 메소드명(매개변수)
 * 					-----
 * 					static: 공통으로 사용되는 메소드, 인스턴스 변수를 사용하지 않을 때(한개만 저장)
 * 							데이터베이스 연결
 * 					final: 수정이 없는 경우, 고정 => 거의 사용빈도가 없음
 * 					생략: 인스턴스 (new의 개수만큼 저장)
 * 			{
 * 				return 값; => void일 경우에는 return을 생략(자동으로 추가)
 * 			}
 * 		메소드 매개변수 종류
 * 			여러개, 없는 경우도 있음, 한개
 * 			---- 3개 이상 배열,클래스 사용 권장
 * 			---- 회원정보, 글쓰기, 수정하기, 예약  => 클래스를 이용
 * 			---- 개수가 명확하지 않는 경우 => 가변 매개변수 (...) 
 * 									 ---------------
 * 										조건 검색, 이메일 ...
 * 
 * 			매개변수
 * 				로그인 => id, pwd
 * 				isLogin(String id,String pwd)
 * 				아이디 체크 => id
 * 				idCheck(String id)
 * 				상세보기 => 번호
 * 				detail(int no)
 * 				페이지 => 페이지번호
 * 				listData(int page)
 * 				회원가입
 * 				memberInsert(Member m)
 * 				여러개 데이터
 * 				find(String[] s)
 * 				find(String...s)
 * 		메소드 리턴형 종류(한개만 설정이 가능)
 * 		-----------
 * 			출력할 내용이 있는 경우: 목록->배열 
 * 			Recipe[] recipeListData()
 * 							상세 = 클래스
 * 			Recipe recipeDetailData(int no)
 * 							총페이지 = 기본형
 *  		int recipeTotalPage()
 *  						로그인 = 기본형
 *  		boolean isLogin(String id,String pwd);
 *  						아이디 중복체크
 *  		boolean isIdCheck(String id)
 *  						우편번호 검색
 *  		Zipcode[] postefind(String dong)
 *  						회원가입 => 오라클에 저장
 *  		void memberInsert(회원정보 m) => 수정, 저장, 삭제
 *  									  ------------ main 페이지로 이동 
 *  
 *  	오버로딩
 *  	-----
 *  	 같은 메소드명으로 새로운 기능을 추가할 때 사용하는 기술
 *  	 조건
 *  	 ---
 *  	  1)같은 클래스 내
 *  	  2) 같은 메소드명
 *  	  3) 매개변수의 개수, 데이터형이 다르게 만든다
 *  	  4) 리턴형은 관계가 없다 
 *  	  ------------------------------- 가장 많이 사용하는 곳(생성자)  
 *  		
 * 
 */
public class 객체지향정리_6 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
